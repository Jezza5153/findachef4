{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/resume-parser.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview Parses a chef's resume to extract experience and skills.\n *\n * - parseResume - A function that handles the resume parsing process.\n * - ParseResumeInput - The input type for the parseResume function.\n * - ParseResumeOutput - The return type for the parseResume function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst ParseResumeInputSchema = z.object({\n  resumeDataUri: z\n    .string()\n    .describe(\n      \"A chef's resume in PDF format, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'.\"\n    ),\n});\nexport type ParseResumeInput = z.infer<typeof ParseResumeInputSchema>;\n\nconst ParseResumeOutputSchema = z.object({\n  experience: z\n    .string()\n    .describe('A summary of the chef’s professional experience.'),\n  skills: z.array(z.string()).describe('A list of the chef’s skills.'),\n});\nexport type ParseResumeOutput = z.infer<typeof ParseResumeOutputSchema>;\n\nexport async function parseResume(input: ParseResumeInput): Promise<ParseResumeOutput> {\n  return parseResumeFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'parseResumePrompt',\n  input: {schema: ParseResumeInputSchema},\n  output: {schema: ParseResumeOutputSchema},\n  prompt: `You are an expert chef resume parser.\n\nYou will extract the experience and skills from the resume.\n\nResume: {{media url=resumeDataUri}}\n\nExtract the chef's professional experience and a list of skills.\n`,\n});\n\nconst parseResumeFlow = ai.defineFlow(\n  {\n    name: 'parseResumeFlow',\n    inputSchema: ParseResumeInputSchema,\n    outputSchema: ParseResumeOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;IA6BsB","debugId":null}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/resume-upload-form.tsx"],"sourcesContent":["'use client';\n\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useForm } from 'react-hook-form';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { Progress } from '@/components/ui/progress';\nimport { useToast } from '@/hooks/use-toast';\nimport { parseResume, type ParseResumeOutput } from '@/ai/flows/resume-parser';\nimport { useState, type ChangeEvent } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\nimport { FileText, Sparkles, UploadCloud } from 'lucide-react';\n\nconst resumeFormSchema = z.object({\n  resume: z.instanceof(File).optional()\n    .refine(file => file && file.size <= 5 * 1024 * 1024, `Max file size is 5MB.`)\n    .refine(file => file && file.type === 'application/pdf', `Only PDF files are allowed.`),\n});\n\ntype ResumeFormValues = z.infer<typeof resumeFormSchema>;\n\ninterface ResumeUploadFormProps {\n  onResumeParsed: (data: ParseResumeOutput) => void;\n  initialData?: ParseResumeOutput;\n}\n\nexport function ResumeUploadForm({ onResumeParsed, initialData }: ResumeUploadFormProps) {\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const [isParsing, setIsParsing] = useState(false);\n  const [fileName, setFileName] = useState<string | null>(null);\n  const [parsedData, setParsedData] = useState<ParseResumeOutput | null>(initialData || null);\n  const { toast } = useToast();\n\n  const form = useForm<ResumeFormValues>({\n    resolver: zodResolver(resumeFormSchema),\n    defaultValues: {},\n  });\n\n  const handleFileChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      form.setValue('resume', file);\n      setFileName(file.name);\n      setParsedData(null); // Clear previous parsed data on new file selection\n    }\n  };\n\n  const onSubmit = async (data: ResumeFormValues) => {\n    if (!data.resume) {\n      toast({\n        title: 'No file selected',\n        description: 'Please select a PDF resume to upload.',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    setIsUploading(true);\n    setIsParsing(false);\n    setUploadProgress(0);\n\n    // Simulate upload progress\n    let progress = 0;\n    const interval = setInterval(() => {\n      progress += 10;\n      if (progress <= 100) {\n        setUploadProgress(progress);\n      } else {\n        clearInterval(interval);\n      }\n    }, 100);\n    \n    try {\n      const reader = new FileReader();\n      reader.readAsDataURL(data.resume);\n      reader.onloadend = async () => {\n        clearInterval(interval); // Ensure progress interval is cleared\n        setUploadProgress(100); // Set progress to 100%\n        setIsUploading(false);\n        setIsParsing(true);\n        \n        const base64data = reader.result as string;\n        \n        toast({\n          title: 'Parsing Resume',\n          description: 'Please wait while we extract information from your resume.',\n        });\n\n        try {\n          const result = await parseResume({ resumeDataUri: base64data });\n          setParsedData(result);\n          onResumeParsed(result);\n          toast({\n            title: 'Resume Parsed Successfully',\n            description: 'Your experience and skills have been extracted.',\n          });\n        } catch (error) {\n          console.error('Error parsing resume:', error);\n          toast({\n            title: 'Error Parsing Resume',\n            description: 'Could not parse the resume. Please try again or ensure it is a valid PDF.',\n            variant: 'destructive',\n          });\n          setParsedData(null);\n        } finally {\n          setIsParsing(false);\n        }\n      };\n      reader.onerror = () => {\n        clearInterval(interval);\n        setIsUploading(false);\n        toast({\n          title: 'File Read Error',\n          description: 'Could not read the selected file.',\n          variant: 'destructive',\n        });\n      };\n    } catch (error) {\n      clearInterval(interval);\n      setIsUploading(false);\n      console.error('Error processing file upload:', error);\n      toast({\n        title: 'Upload Failed',\n        description: 'An unexpected error occurred during upload.',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center\">\n          <FileText className=\"mr-2 h-6 w-6 text-primary\" />\n          Upload Your Resume\n        </CardTitle>\n        <CardDescription>\n          Upload your PDF resume. We'll use AI to help populate your profile. Max 5MB.\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            <FormField\n              control={form.control}\n              name=\"resume\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel htmlFor=\"resume-upload\" className=\"sr-only\">Resume</FormLabel>\n                  <FormControl>\n                    <div className=\"flex items-center space-x-2\">\n                       <Input\n                        id=\"resume-upload\"\n                        type=\"file\"\n                        accept=\"application/pdf\"\n                        onChange={handleFileChange}\n                        className=\"hidden\"\n                        disabled={isUploading || isParsing}\n                      />\n                      <label\n                        htmlFor=\"resume-upload\"\n                        className={`flex items-center justify-center w-full px-4 py-2 border-2 border-dashed rounded-md cursor-pointer\n                                    hover:border-primary transition-colors\n                                    ${isUploading || isParsing ? 'opacity-50 cursor-not-allowed' : ''}`}\n                      >\n                        <UploadCloud className=\"mr-2 h-5 w-5\" />\n                        <span>{fileName || 'Click to upload PDF'}</span>\n                      </label>\n                    </div>\n                  </FormControl>\n                  <FormDescription>\n                    {fileName && `Selected file: ${fileName}`}\n                  </FormDescription>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {(isUploading || isParsing) && (\n              <div className=\"space-y-2\">\n                <Progress value={uploadProgress} className=\"w-full\" />\n                <p className=\"text-sm text-muted-foreground text-center\">\n                  {isUploading ? `Uploading: ${uploadProgress}%` : 'Parsing resume with AI...'}\n                </p>\n              </div>\n            )}\n\n            <Button type=\"submit\" disabled={isUploading || isParsing || !form.watch('resume')} className=\"w-full\">\n              {isParsing ? (\n                <>\n                  <Sparkles className=\"mr-2 h-4 w-4 animate-spin\" /> Parsing...\n                </>\n              ) : isUploading ? (\n                'Uploading...'\n              ) : (\n                <>\n                  <UploadCloud className=\"mr-2 h-4 w-4\" /> Upload & Parse Resume\n                </>\n              )}\n            </Button>\n          </form>\n        </Form>\n\n        {parsedData && (\n          <div className=\"mt-8 space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\"><Sparkles className=\"mr-2 h-5 w-5 text-primary\" /> AI Extracted Information</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div>\n                  <h3 className=\"text-lg font-semibold text-foreground\">Experience Summary</h3>\n                  <p className=\"text-sm text-muted-foreground whitespace-pre-wrap\">{parsedData.experience || 'No experience summary extracted.'}</p>\n                </div>\n                <div>\n                  <h3 className=\"text-lg font-semibold text-foreground\">Skills</h3>\n                  {parsedData.skills && parsedData.skills.length > 0 ? (\n                    <ul className=\"list-disc list-inside space-y-1 text-sm text-muted-foreground\">\n                      {parsedData.skills.map((skill, index) => (\n                        <li key={index}>{skill}</li>\n                      ))}\n                    </ul>\n                  ) : (\n                    <p className=\"text-sm text-muted-foreground\">No skills extracted.</p>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 839, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/chef/signup/page.tsx"],"sourcesContent":["'use client';\n\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useForm } from 'react-hook-form';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { ResumeUploadForm } from '@/components/resume-upload-form';\nimport { useState } from 'react';\nimport type { ParseResumeOutput } from '@/ai/flows/resume-parser';\nimport { useToast } from '@/hooks/use-toast';\nimport Image from 'next/image';\nimport { ChefHat, UserPlus, UploadCloud } from 'lucide-react';\n\nconst chefSignupSchema = z.object({\n  email: z.string().email({ message: 'Invalid email address.' }),\n  password: z.string().min(8, { message: 'Password must be at least 8 characters.' }),\n  confirmPassword: z.string(),\n  name: z.string().min(2, { message: 'Name must be at least 2 characters.' }),\n  bio: z.string().min(20, {message: 'Bio must be at least 20 characters.'}).max(500, {message: \"Bio cannot exceed 500 characters.\"}),\n  specialties: z.string().min(1, { message: 'Please list at least one specialty.' }), // Comma-separated\n  profilePicture: z.instanceof(File).optional()\n    .refine(file => !file || file.size <= 2 * 1024 * 1024, `Max file size is 2MB.`)\n    .refine(file => !file || ['image/jpeg', 'image/png', 'image/webp'].includes(file.type), `Only JPG, PNG, WEBP files are allowed.`),\n}).refine(data => data.password === data.confirmPassword, {\n  message: \"Passwords don't match\",\n  path: ['confirmPassword'],\n});\n\ntype ChefSignupFormValues = z.infer<typeof chefSignupSchema>;\n\nexport default function ChefSignupPage() {\n  const [resumeParsedData, setResumeParsedData] = useState<ParseResumeOutput | null>(null);\n  const [isResumeUploaded, setIsResumeUploaded] = useState(false);\n  const [profilePicturePreview, setProfilePicturePreview] = useState<string | null>(null);\n  const { toast } = useToast();\n\n  const form = useForm<ChefSignupFormValues>({\n    resolver: zodResolver(chefSignupSchema),\n    defaultValues: {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      name: '',\n      bio: '',\n      specialties: '',\n    },\n  });\n\n  const handleResumeParsed = (data: ParseResumeOutput) => {\n    setResumeParsedData(data);\n    setIsResumeUploaded(true);\n    // Optionally pre-fill form fields, e.g., bio if skills/experience can be summarized\n    if (data.experience && form.getValues('bio') === '') {\n        form.setValue('bio', data.experience.substring(0,500));\n    }\n    if (data.skills && data.skills.length > 0 && form.getValues('specialties') === '') {\n        form.setValue('specialties', data.skills.join(', '));\n    }\n  };\n\n  const handleProfilePictureChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      form.setValue('profilePicture', file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setProfilePicturePreview(reader.result as string);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      form.setValue('profilePicture', undefined);\n      setProfilePicturePreview(null);\n    }\n  };\n\n  const onSubmit = (data: ChefSignupFormValues) => {\n    if (!isResumeUploaded) {\n      toast({\n        title: 'Resume Required',\n        description: 'Please upload and parse your resume before submitting.',\n        variant: 'destructive',\n      });\n      return;\n    }\n    \n    console.log('Chef Signup Data:', data);\n    console.log('Parsed Resume Data:', resumeParsedData);\n    // TODO: Implement actual signup logic (e.g., Firebase Auth, API call)\n    toast({\n      title: 'Signup Successful (Simulated)',\n      description: 'Your chef profile has been created. Welcome to CulinaryConnect!',\n    });\n    form.reset();\n    setResumeParsedData(null);\n    setIsResumeUploaded(false);\n    setProfilePicturePreview(null);\n  };\n\n  return (\n    <div className=\"container mx-auto max-w-4xl py-12 px-4 sm:px-6 lg:px-8\">\n      <Card className=\"shadow-xl\">\n        <CardHeader className=\"text-center\">\n          <div className=\"mx-auto mb-4 inline-flex h-16 w-16 items-center justify-center rounded-full bg-primary/10 text-primary\">\n            <ChefHat className=\"h-8 w-8\" />\n          </div>\n          <CardTitle className=\"text-3xl font-bold\">Become a Chef on CulinaryConnect</CardTitle>\n          <CardDescription className=\"text-lg\">\n            Join our platform to showcase your skills, manage bookings, and connect with clients.\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-8\">\n          <ResumeUploadForm onResumeParsed={handleResumeParsed} initialData={resumeParsedData ?? undefined} />\n\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n              <h3 className=\"text-xl font-semibold border-b pb-2\">Account Information</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <FormField\n                  control={form.control}\n                  name=\"email\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Email Address</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"you@example.com\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                 <FormField\n                  control={form.control}\n                  name=\"name\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Full Name</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"e.g., Julia Child\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name=\"password\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Password</FormLabel>\n                      <FormControl>\n                        <Input type=\"password\" placeholder=\"••••••••\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name=\"confirmPassword\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Confirm Password</FormLabel>\n                      <FormControl>\n                        <Input type=\"password\" placeholder=\"••••••••\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <h3 className=\"text-xl font-semibold border-b pb-2 pt-4\">Profile Details</h3>\n              <FormField\n                  control={form.control}\n                  name=\"profilePicture\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Profile Picture</FormLabel>\n                      <FormControl>\n                        <div className=\"flex items-center space-x-4\">\n                          {profilePicturePreview ? (\n                            <Image src={profilePicturePreview} alt=\"Profile preview\" width={80} height={80} className=\"rounded-full object-cover\" />\n                          ) : (\n                            <div className=\"h-20 w-20 rounded-full bg-muted flex items-center justify-center text-muted-foreground\">\n                              <UserPlus className=\"h-10 w-10\" />\n                            </div>\n                          )}\n                          <Input \n                            type=\"file\" \n                            accept=\"image/jpeg,image/png,image/webp\"\n                            onChange={handleProfilePictureChange} \n                            className=\"hidden\"\n                            id=\"profilePictureUpload\"\n                          />\n                          <Button type=\"button\" variant=\"outline\" asChild>\n                            <label htmlFor=\"profilePictureUpload\" className=\"cursor-pointer\">\n                              <UploadCloud className=\"mr-2 h-4 w-4\" /> Upload Photo\n                            </label>\n                          </Button>\n                        </div>\n                      </FormControl>\n                      <FormDescription>Upload a professional headshot (JPG, PNG, WEBP, max 2MB).</FormDescription>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              <FormField\n                control={form.control}\n                name=\"bio\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Short Bio</FormLabel>\n                    <FormControl>\n                      <Textarea\n                        placeholder=\"Tell us about your culinary passion, experience, and what makes your cooking unique.\"\n                        className=\"min-h-[100px]\"\n                        {...field}\n                      />\n                    </FormControl>\n                     <FormDescription>Max 500 characters. This will be shown on your public profile.</FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"specialties\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Specialties / Cuisine Types</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"e.g., Italian, French, Pastry, Vegan, Gluten-Free\" {...field} />\n                    </FormControl>\n                    <FormDescription>Comma-separated list of your culinary specialties.</FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              \n              <Button type=\"submit\" className=\"w-full text-lg py-3\" size=\"lg\" disabled={!isResumeUploaded || form.formState.isSubmitting}>\n                <UserPlus className=\"mr-2 h-5 w-5\" /> Create Chef Account\n              </Button>\n              {!isResumeUploaded && (\n                <p className=\"text-sm text-destructive text-center\">Please upload and parse your resume above to enable account creation.</p>\n              )}\n            </form>\n          </Form>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}