{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/resume-parser.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview Parses a chef's resume to extract experience, skills, and education.\n *\n * - parseResume - A function that handles the resume parsing process.\n * - ParseResumeInput - The input type for the parseResume function.\n * - ParseResumeOutput - The return type for the parseResume function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst ParseResumeInputSchema = z.object({\n  resumeDataUri: z\n    .string()\n    .describe(\n      \"A chef's resume in PDF format, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'.\"\n    ),\n});\nexport type ParseResumeInput = z.infer<typeof ParseResumeInputSchema>;\n\nconst ParseResumeOutputSchema = z.object({\n  experience: z\n    .string()\n    .describe('A summary of the chef’s professional experience.'),\n  skills: z.array(z.string()).describe('A list of the chef’s skills.'),\n  education: z.string().optional().describe('A summary of the chef’s education history.'), // Added education\n});\nexport type ParseResumeOutput = z.infer<typeof ParseResumeOutputSchema>;\n\nexport async function parseResume(input: ParseResumeInput): Promise<ParseResumeOutput> {\n  return parseResumeFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'parseResumePrompt',\n  input: {schema: ParseResumeInputSchema},\n  output: {schema: ParseResumeOutputSchema},\n  prompt: `You are an expert chef resume parser.\n\nYou will extract the experience, skills, and education from the resume.\n\nResume: {{media url=resumeDataUri}}\n\nExtract the chef's professional experience, a list of skills, and a summary of their education.\n`,\n});\n\nconst parseResumeFlow = ai.defineFlow(\n  {\n    name: 'parseResumeFlow',\n    inputSchema: ParseResumeInputSchema,\n    outputSchema: ParseResumeOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;IA8BsB","debugId":null}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/resume-upload-form.tsx"],"sourcesContent":["'use client';\n\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useForm } from 'react-hook-form';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { Progress } from '@/components/ui/progress';\nimport { useToast } from '@/hooks/use-toast';\nimport { parseResume, type ParseResumeOutput } from '@/ai/flows/resume-parser';\nimport { useState, type ChangeEvent } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\nimport { FileText, Sparkles, UploadCloud } from 'lucide-react';\n\nconst resumeFormSchema = z.object({\n  resume: z.instanceof(File).optional()\n    .refine(file => file && file.size <= 5 * 1024 * 1024, `Max file size is 5MB.`)\n    .refine(file => file && file.type === 'application/pdf', `Only PDF files are allowed.`),\n});\n\ntype ResumeFormValues = z.infer<typeof resumeFormSchema>;\n\ninterface ResumeUploadFormProps {\n  onResumeParsed: (data: ParseResumeOutput) => void;\n  initialData?: ParseResumeOutput;\n}\n\nexport function ResumeUploadForm({ onResumeParsed, initialData }: ResumeUploadFormProps) {\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const [isParsing, setIsParsing] = useState(false);\n  const [fileName, setFileName] = useState<string | null>(null);\n  const [parsedData, setParsedData] = useState<ParseResumeOutput | null>(initialData || null);\n  const { toast } = useToast();\n\n  const form = useForm<ResumeFormValues>({\n    resolver: zodResolver(resumeFormSchema),\n    defaultValues: {},\n  });\n\n  const handleFileChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      form.setValue('resume', file);\n      setFileName(file.name);\n      setParsedData(null); // Clear previous parsed data on new file selection\n    }\n  };\n\n  const onSubmit = async (data: ResumeFormValues) => {\n    if (!data.resume) {\n      toast({\n        title: 'No file selected',\n        description: 'Please select a PDF resume to upload.',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    setIsUploading(true);\n    setIsParsing(false);\n    setUploadProgress(0);\n\n    // Simulate upload progress\n    let progress = 0;\n    const interval = setInterval(() => {\n      progress += 10;\n      if (progress <= 100) {\n        setUploadProgress(progress);\n      } else {\n        clearInterval(interval);\n      }\n    }, 100);\n    \n    try {\n      const reader = new FileReader();\n      reader.readAsDataURL(data.resume);\n      reader.onloadend = async () => {\n        clearInterval(interval); // Ensure progress interval is cleared\n        setUploadProgress(100); // Set progress to 100%\n        setIsUploading(false);\n        setIsParsing(true);\n        \n        const base64data = reader.result as string;\n        \n        toast({\n          title: 'Parsing Resume',\n          description: 'Please wait while we extract information from your resume.',\n        });\n\n        try {\n          const result = await parseResume({ resumeDataUri: base64data });\n          setParsedData(result);\n          onResumeParsed(result);\n          toast({\n            title: 'Resume Parsed Successfully',\n            description: 'Your experience and skills have been extracted.',\n          });\n        } catch (error) {\n          console.error('Error parsing resume:', error);\n          toast({\n            title: 'Error Parsing Resume',\n            description: 'Could not parse the resume. Please try again or ensure it is a valid PDF.',\n            variant: 'destructive',\n          });\n          setParsedData(null);\n        } finally {\n          setIsParsing(false);\n        }\n      };\n      reader.onerror = () => {\n        clearInterval(interval);\n        setIsUploading(false);\n        toast({\n          title: 'File Read Error',\n          description: 'Could not read the selected file.',\n          variant: 'destructive',\n        });\n      };\n    } catch (error) {\n      clearInterval(interval);\n      setIsUploading(false);\n      console.error('Error processing file upload:', error);\n      toast({\n        title: 'Upload Failed',\n        description: 'An unexpected error occurred during upload.',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center\">\n          <FileText className=\"mr-2 h-6 w-6 text-primary\" />\n          Upload Your Resume\n        </CardTitle>\n        <CardDescription>\n          Upload your PDF resume. We'll use AI to help populate your profile. Max 5MB.\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            <FormField\n              control={form.control}\n              name=\"resume\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel htmlFor=\"resume-upload\" className=\"sr-only\">Resume</FormLabel>\n                  <FormControl>\n                    <div className=\"flex items-center space-x-2\">\n                       <Input\n                        id=\"resume-upload\"\n                        type=\"file\"\n                        accept=\"application/pdf\"\n                        onChange={handleFileChange}\n                        className=\"hidden\"\n                        disabled={isUploading || isParsing}\n                      />\n                      <label\n                        htmlFor=\"resume-upload\"\n                        className={`flex items-center justify-center w-full px-4 py-2 border-2 border-dashed rounded-md cursor-pointer\n                                    hover:border-primary transition-colors\n                                    ${isUploading || isParsing ? 'opacity-50 cursor-not-allowed' : ''}`}\n                      >\n                        <UploadCloud className=\"mr-2 h-5 w-5\" />\n                        <span>{fileName || 'Click to upload PDF'}</span>\n                      </label>\n                    </div>\n                  </FormControl>\n                  <FormDescription>\n                    {fileName && `Selected file: ${fileName}`}\n                  </FormDescription>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {(isUploading || isParsing) && (\n              <div className=\"space-y-2\">\n                <Progress value={uploadProgress} className=\"w-full\" />\n                <p className=\"text-sm text-muted-foreground text-center\">\n                  {isUploading ? `Uploading: ${uploadProgress}%` : 'Parsing resume with AI...'}\n                </p>\n              </div>\n            )}\n\n            <Button type=\"submit\" disabled={isUploading || isParsing || !form.watch('resume')} className=\"w-full\">\n              {isParsing ? (\n                <>\n                  <Sparkles className=\"mr-2 h-4 w-4 animate-spin\" /> Parsing...\n                </>\n              ) : isUploading ? (\n                'Uploading...'\n              ) : (\n                <>\n                  <UploadCloud className=\"mr-2 h-4 w-4\" /> Upload & Parse Resume\n                </>\n              )}\n            </Button>\n          </form>\n        </Form>\n\n        {parsedData && (\n          <div className=\"mt-8 space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\"><Sparkles className=\"mr-2 h-5 w-5 text-primary\" /> AI Extracted Information</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div>\n                  <h3 className=\"text-lg font-semibold text-foreground\">Experience Summary</h3>\n                  <p className=\"text-sm text-muted-foreground whitespace-pre-wrap\">{parsedData.experience || 'No experience summary extracted.'}</p>\n                </div>\n                <div>\n                  <h3 className=\"text-lg font-semibold text-foreground\">Skills</h3>\n                  {parsedData.skills && parsedData.skills.length > 0 ? (\n                    <ul className=\"list-disc list-inside space-y-1 text-sm text-muted-foreground\">\n                      {parsedData.skills.map((skill, index) => (\n                        <li key={index}>{skill}</li>\n                      ))}\n                    </ul>\n                  ) : (\n                    <p className=\"text-sm text-muted-foreground\">No skills extracted.</p>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 810, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/chef/dashboard/profile/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useForm } from 'react-hook-form';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { ResumeUploadForm } from '@/components/resume-upload-form';\nimport { useState, useEffect } from 'react';\nimport type { ParseResumeOutput, ChefProfile as ChefProfileType } from '@/types';\nimport { useToast } from '@/hooks/use-toast';\nimport Image from 'next/image';\nimport { UserCircle, Save, Edit3, Briefcase, Lightbulb, UploadCloud, GraduationCap, Images, Download } from 'lucide-react';\n\n// Mock current chef data\nconst currentChefData: ChefProfileType = {\n  id: 'chef123',\n  name: 'Julia Child',\n  email: 'julia.child@example.com',\n  tagline: 'Master of French Cuisine',\n  bio: 'Passionate chef with over 10 years of experience in French cuisine. Loves to create memorable dining experiences.',\n  specialties: ['French Cuisine', 'Pastry', 'Classic European'],\n  profilePictureUrl: 'https://placehold.co/150x150.png',\n  experienceSummary: \"Initial summary from a previous resume perhaps.\",\n  education: \"Graduated from Le Cordon Bleu, Paris.\",\n  skills: [\"Knife Skills\", \"Menu Planning\", \"Event Catering\"],\n  portfolioItem1Url: 'https://placehold.co/300x200.png',\n  portfolioItem1Caption: 'Signature Beef Bourguignon',\n  portfolioItem2Url: 'https://placehold.co/300x200.png',\n  portfolioItem2Caption: 'Delicate Chocolate Soufflé',\n  resumeFileUrl: '#', // Placeholder for actual resume URL\n};\n\nconst chefProfileSchema = z.object({\n  name: z.string().min(2, { message: 'Name must be at least 2 characters.' }),\n  email: z.string().email({ message: 'Invalid email address.' }),\n  tagline: z.string().max(100, \"Tagline cannot exceed 100 characters.\").optional(),\n  bio: z.string().min(20, {message: 'Bio must be at least 20 characters.'}).max(500, {message: \"Bio cannot exceed 500 characters.\"}),\n  specialties: z.string().min(1, { message: 'Please list at least one specialty.' }), // Comma-separated\n  profilePicture: z.instanceof(File).optional()\n    .refine(file => !file || file.size <= 2 * 1024 * 1024, `Max file size is 2MB.`)\n    .refine(file => !file || ['image/jpeg', 'image/png', 'image/webp'].includes(file.type), `Only JPG, PNG, WEBP files are allowed.`),\n  experienceSummary: z.string().optional(),\n  education: z.string().max(2000, \"Education summary cannot exceed 2000 characters.\").optional(),\n  skills: z.string().optional(), // Comma-separated skills\n  portfolioItem1Url: z.string().url({ message: \"Invalid URL for portfolio item 1.\" }).optional().or(z.literal('')),\n  portfolioItem1Caption: z.string().max(150, \"Caption for item 1 cannot exceed 150 characters.\").optional(),\n  portfolioItem2Url: z.string().url({ message: \"Invalid URL for portfolio item 2.\" }).optional().or(z.literal('')),\n  portfolioItem2Caption: z.string().max(150, \"Caption for item 2 cannot exceed 150 characters.\").optional(),\n});\n\ntype ChefProfileFormValues = z.infer<typeof chefProfileSchema>;\n\nexport default function ChefProfilePage() {\n  const [chefData, setChefData] = useState<ChefProfileType>(currentChefData);\n  const [profilePicturePreview, setProfilePicturePreview] = useState<string | null>(chefData.profilePictureUrl || null);\n  const { toast } = useToast();\n\n  const form = useForm<ChefProfileFormValues>({\n    resolver: zodResolver(chefProfileSchema),\n    defaultValues: {\n      name: chefData.name,\n      email: chefData.email,\n      tagline: chefData.tagline || '',\n      bio: chefData.bio,\n      specialties: chefData.specialties.join(', '),\n      experienceSummary: chefData.experienceSummary,\n      education: chefData.education || '',\n      skills: chefData.skills?.join(', '),\n      portfolioItem1Url: chefData.portfolioItem1Url || '',\n      portfolioItem1Caption: chefData.portfolioItem1Caption || '',\n      portfolioItem2Url: chefData.portfolioItem2Url || '',\n      portfolioItem2Caption: chefData.portfolioItem2Caption || '',\n    },\n  });\n  \n  useEffect(() => {\n    form.reset({\n      name: chefData.name,\n      email: chefData.email,\n      tagline: chefData.tagline || '',\n      bio: chefData.bio,\n      specialties: chefData.specialties.join(', '),\n      experienceSummary: chefData.experienceSummary,\n      education: chefData.education || '',\n      skills: chefData.skills?.join(', '),\n      portfolioItem1Url: chefData.portfolioItem1Url || '',\n      portfolioItem1Caption: chefData.portfolioItem1Caption || '',\n      portfolioItem2Url: chefData.portfolioItem2Url || '',\n      portfolioItem2Caption: chefData.portfolioItem2Caption || '',\n    });\n    setProfilePicturePreview(chefData.profilePictureUrl || null);\n  }, [chefData, form]);\n\n\n  const handleResumeParsed = (data: ParseResumeOutput) => {\n    setChefData(prev => ({\n      ...prev,\n      experienceSummary: data.experience,\n      skills: data.skills,\n      education: data.education || prev.education, // Update education if provided\n    }));\n    form.setValue('experienceSummary', data.experience);\n    form.setValue('skills', data.skills.join(', '));\n    if (data.education) {\n      form.setValue('education', data.education);\n    }\n    toast({\n        title: \"Profile Updated from Resume\",\n        description: \"Your experience, skills, and education have been updated.\"\n    })\n  };\n\n  const handleProfilePictureChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      form.setValue('profilePicture', file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setProfilePicturePreview(reader.result as string);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      form.setValue('profilePicture', undefined);\n      setProfilePicturePreview(chefData.profilePictureUrl || null); \n    }\n  };\n\n  const onSubmit = (data: ChefProfileFormValues) => {\n    console.log('Chef Profile Update Data:', data);\n    // Simulate API call to update profile\n    setChefData(prev => ({\n      ...prev,\n      name: data.name,\n      email: data.email,\n      tagline: data.tagline,\n      bio: data.bio,\n      specialties: data.specialties.split(',').map(s => s.trim()),\n      experienceSummary: data.experienceSummary,\n      education: data.education,\n      skills: data.skills?.split(',').map(s => s.trim()),\n      profilePictureUrl: profilePicturePreview || prev.profilePictureUrl, \n      portfolioItem1Url: data.portfolioItem1Url,\n      portfolioItem1Caption: data.portfolioItem1Caption,\n      portfolioItem2Url: data.portfolioItem2Url,\n      portfolioItem2Caption: data.portfolioItem2Caption,\n    }));\n    \n    toast({\n      title: 'Profile Updated Successfully',\n      description: 'Your chef profile has been saved.',\n    });\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      <Card className=\"shadow-lg\">\n        <CardHeader>\n          <CardTitle className=\"text-2xl font-bold flex items-center\"><UserCircle className=\"mr-3 h-7 w-7 text-primary\" /> Your Chef Profile</CardTitle>\n          <CardDescription>Manage your public-facing profile information, portfolio, and resume.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 items-start\">\n                <div className=\"md:col-span-1 flex flex-col items-center\">\n                  <Image \n                    src={profilePicturePreview || \"https://placehold.co/150x150.png\"} \n                    alt={chefData.name} \n                    width={150} \n                    height={150} \n                    className=\"rounded-full object-cover shadow-md mb-4\"\n                    data-ai-hint=\"chef portrait\"\n                  />\n                   <FormField\n                      control={form.control}\n                      name=\"profilePicture\"\n                      render={({ field }) => ( \n                        <FormItem className=\"w-full\">\n                          <FormControl>\n                            <>\n                              <Input \n                                type=\"file\" \n                                accept=\"image/jpeg,image/png,image/webp\"\n                                onChange={handleProfilePictureChange} \n                                className=\"hidden\"\n                                id=\"profilePictureUpdate\"\n                              />\n                              <Button type=\"button\" variant=\"outline\" asChild className=\"w-full\">\n                                <label htmlFor=\"profilePictureUpdate\" className=\"cursor-pointer flex items-center justify-center\">\n                                  <UploadCloud className=\"mr-2 h-4 w-4\" /> Change Photo\n                                </label>\n                              </Button>\n                            </>\n                          </FormControl>\n                          <FormMessage className=\"text-center\"/>\n                        </FormItem>\n                      )}\n                    />\n                </div>\n                <div className=\"md:col-span-2 space-y-6\">\n                  <FormField\n                    control={form.control}\n                    name=\"name\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Full Name</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"e.g., Julia Child\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <FormField\n                    control={form.control}\n                    name=\"email\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Email Address</FormLabel>\n                        <FormControl>\n                          <Input type=\"email\" placeholder=\"you@example.com\" {...field} readOnly disabled // Email usually not editable after signup\n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <FormField\n                    control={form.control}\n                    name=\"tagline\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Tagline / Professional Title</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"e.g., Master of French Cuisine, Private Chef\" {...field} />\n                        </FormControl>\n                        <FormDescription>A short, catchy title for your profile.</FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </div>\n              </div>\n              \n              <FormField\n                control={form.control}\n                name=\"bio\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Short Bio</FormLabel>\n                    <FormControl>\n                      <Textarea\n                        placeholder=\"Tell us about your culinary passion...\"\n                        className=\"min-h-[100px]\"\n                        {...field}\n                      />\n                    </FormControl>\n                    <FormDescription>This will be shown on your public profile. Max 500 characters.</FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"specialties\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Specialties / Cuisine Types (Tags)</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"e.g., Italian, French, Pastry\" {...field} />\n                    </FormControl>\n                    <FormDescription>Comma-separated list of your culinary specialties.</FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <div className=\"pt-4 border-t\">\n                <h3 className=\"text-lg font-semibold mb-3 flex items-center\"><GraduationCap className=\"mr-2 h-5 w-5 text-primary\" /> Education</h3>\n                 <FormField\n                    control={form.control}\n                    name=\"education\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormControl>\n                          <Textarea\n                            placeholder=\"Your education summary will appear here (from resume or manual input)...\"\n                            className=\"min-h-[80px] bg-muted/30\"\n                            {...field}\n                          />\n                        </FormControl>\n                        <FormDescription>This field can be auto-filled by resume parsing or edited manually.</FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n              </div>\n              \n              <div className=\"pt-4 border-t\">\n                <h3 className=\"text-lg font-semibold mb-3 flex items-center\"><Briefcase className=\"mr-2 h-5 w-5 text-primary\" /> Experience Summary (from Resume)</h3>\n                 <FormField\n                    control={form.control}\n                    name=\"experienceSummary\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormControl>\n                          <Textarea\n                            placeholder=\"Your professional experience summary will appear here after resume parsing...\"\n                            className=\"min-h-[120px] bg-muted/30\"\n                            {...field}\n                          />\n                        </FormControl>\n                        <FormDescription>This field can be auto-filled by resume parsing or edited manually.</FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n              </div>\n\n              <div className=\"pt-4 border-t\">\n                <h3 className=\"text-lg font-semibold mb-3 flex items-center\"><Lightbulb className=\"mr-2 h-5 w-5 text-primary\" /> Skills (from Resume)</h3>\n                 <FormField\n                    control={form.control}\n                    name=\"skills\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormControl>\n                           <Input \n                            placeholder=\"Your skills will appear here, comma-separated...\" \n                            className=\"bg-muted/30\"\n                            {...field} \n                           />\n                        </FormControl>\n                        <FormDescription>This field can be auto-filled by resume parsing or edited manually. Comma-separated.</FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n              </div>\n\n              <div className=\"pt-4 border-t\">\n                <h3 className=\"text-lg font-semibold mb-4 flex items-center\"><Images className=\"mr-2 h-5 w-5 text-primary\" /> Portfolio (Max 2 items)</h3>\n                <div className=\"space-y-6\">\n                  {[1, 2].map(itemNum => (\n                    <div key={itemNum} className=\"p-4 border rounded-md shadow-sm bg-muted/20 space-y-4\">\n                      <h4 className=\"font-medium text-md\">Portfolio Item {itemNum}</h4>\n                      <FormField\n                        control={form.control}\n                        name={`portfolioItem${itemNum}Url` as 'portfolioItem1Url' | 'portfolioItem2Url'}\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Image URL</FormLabel>\n                            <FormControl><Input placeholder=\"https://example.com/your-dish.jpg\" {...field} /></FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      {form.watch(`portfolioItem${itemNum}Url` as 'portfolioItem1Url' | 'portfolioItem2Url') && (\n                        <Image \n                            src={form.watch(`portfolioItem${itemNum}Url` as 'portfolioItem1Url' | 'portfolioItem2Url') || \"https://placehold.co/300x200.png?text=Preview\"} \n                            alt={`Portfolio Item ${itemNum} Preview`}\n                            width={300}\n                            height={200}\n                            className=\"rounded-md object-cover border shadow-sm\"\n                            data-ai-hint=\"food photography\"\n                            onError={(e) => { (e.target as HTMLImageElement).src = \"https://placehold.co/300x200.png?text=Invalid+URL\";}}\n                        />\n                      )}\n                      <FormField\n                        control={form.control}\n                        name={`portfolioItem${itemNum}Caption` as 'portfolioItem1Caption' | 'portfolioItem2Caption'}\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Caption (Optional)</FormLabel>\n                            <FormControl><Input placeholder=\"e.g., My Signature Dish\" {...field} /></FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"pt-6 border-t flex flex-col sm:flex-row items-center justify-between gap-4\">\n                <Button type=\"submit\" size=\"lg\" className=\"w-full sm:w-auto\">\n                  <Save className=\"mr-2 h-5 w-5\" /> Save Profile Changes\n                </Button>\n                <Button \n                  type=\"button\" \n                  variant=\"outline\" \n                  size=\"lg\" \n                  className=\"w-full sm:w-auto\"\n                  onClick={() => {\n                    if (chefData.resumeFileUrl && chefData.resumeFileUrl !== '#') {\n                      window.open(chefData.resumeFileUrl, '_blank');\n                    } else {\n                      toast({ title: \"Resume Not Available\", description: \"No resume file URL is currently set for download.\", variant: \"destructive\" });\n                    }\n                  }}\n                  disabled={!chefData.resumeFileUrl || chefData.resumeFileUrl === '#'}\n                >\n                  <Download className=\"mr-2 h-5 w-5\" /> Download Resume\n                </Button>\n              </div>\n            </form>\n          </Form>\n        </CardContent>\n      </Card>\n\n      <ResumeUploadForm \n        onResumeParsed={handleResumeParsed} \n        initialData={{\n          experience: chefData.experienceSummary || \"\", \n          skills: chefData.skills || [],\n          education: chefData.education || \"\"\n        }} \n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}