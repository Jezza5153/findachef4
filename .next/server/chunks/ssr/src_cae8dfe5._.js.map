{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/login/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useForm } from 'react-hook-form';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { LogIn, Loader2 } from 'lucide-react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/navigation';\nimport { useToast } from '@/hooks/use-toast';\nimport { signInWithEmailAndPassword, sendPasswordResetEmail } from 'firebase/auth';\nimport { auth, db } from '@/lib/firebase';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { useState } from 'react';\nimport type { AppUserProfileContext } from '@/types';\n\nconst loginSchema = z.object({\n  email: z.string().email({ message: 'Invalid email address.' }),\n  password: z.string().min(1, { message: 'Password is required.' }),\n});\n\ntype LoginFormValues = z.infer<typeof loginSchema>;\n\nexport default function LoginPage() {\n  const router = useRouter();\n  const { toast } = useToast();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const form = useForm<LoginFormValues>({\n    resolver: zodResolver(loginSchema),\n    defaultValues: {\n      email: '',\n      password: '',\n    },\n  });\n\n  const handleLogin = async (data: LoginFormValues) => {\n    setIsLoading(true);\n    try {\n      console.log(\"Login attempt for:\", data.email);\n      const userCredential = await signInWithEmailAndPassword(auth, data.email, data.password);\n      const user = userCredential.user;\n      console.log(\"Firebase Auth successful for UID:\", user.uid);\n      \n      toast({\n        title: 'Login Successful',\n        description: 'Welcome back! Redirecting...',\n      });\n\n      // AuthContext will now handle fetching profile and determining role/admin status based on claims.\n      // The redirection here is an initial guess; dashboard layouts will enforce final access.\n      \n      let roleForRedirect: AppUserProfileContext['role'] = 'customer'; // Default assumption\n\n      if (user) {\n        const userDocRef = doc(db, \"users\", user.uid);\n        const userDoc = await getDoc(userDocRef);\n\n        if (userDoc.exists()) {\n          const userData = userDoc.data() as AppUserProfileContext;\n          console.log(\"Login: Firestore profile found:\", userData);\n          roleForRedirect = userData.role || 'customer';\n          \n          // REMOVED localStorage setters for isChefApproved and isChefSubscribed\n          // AuthContext will derive these from the fetched userData.\n\n        } else {\n          console.warn(\"Login: No profile document found in Firestore for UID:\", user.uid);\n          // This case should be rare if signup flows correctly create profiles.\n          // If it happens, AuthContext will handle it by having a null userProfile initially.\n          // We can keep a very basic fallback for initial redirect, but AuthContext is king.\n          if (data.email.toLowerCase().includes('chef@')) {\n            roleForRedirect = 'chef';\n          } else if (data.email.toLowerCase() === 'admin@example.com' || data.email.toLowerCase() === 'jezza5152@gmail.com') { // Example admin email check\n            roleForRedirect = 'admin';\n          }\n        }\n      }\n      \n      console.log(\"Login: Determined role for initial redirect:\", roleForRedirect);\n\n      // Redirect based on role fetched or default\n      // The AuthContext and respective dashboard layouts will handle final authorization.\n      if (roleForRedirect === 'admin') {\n        router.push('/admin');\n      } else if (roleForRedirect === 'chef') {\n        router.push('/chef/dashboard');\n      } else {\n        router.push('/customer/dashboard');\n      }\n\n    } catch (error: any) {\n      console.error('Login error:', error);\n      let errorMessage = 'Failed to login. Please check your credentials.';\n      if (error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password' || error.code === 'auth/invalid-credential') {\n        errorMessage = 'Invalid email or password.';\n      } else if (error.code === 'auth/too-many-requests') {\n        errorMessage = 'Too many login attempts. Please try again later.';\n      }\n      toast({\n        title: 'Login Failed',\n        description: errorMessage,\n        variant: 'destructive',\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handlePasswordReset = async () => {\n    const email = form.getValues('email');\n    if (!email) {\n      toast({\n        title: 'Email Required',\n        description: 'Please enter your email address to reset your password.',\n        variant: 'destructive',\n      });\n      form.setError('email', { type: 'manual', message: 'Email is required for password reset.' });\n      return;\n    }\n    if (!z.string().email().safeParse(email).success) {\n        toast({\n            title: 'Invalid Email',\n            description: 'Please enter a valid email address.',\n            variant: 'destructive',\n        });\n        form.setError('email', { type: 'manual', message: 'Please enter a valid email address.' });\n        return;\n    }\n\n    setIsLoading(true);\n    try {\n      await sendPasswordResetEmail(auth, email);\n      toast({\n        title: 'Password Reset Email Sent',\n        description: 'If an account exists for this email, a password reset link has been sent. Please check your inbox.',\n      });\n    } catch (error: any) {\n      console.error('Password reset error:', error);\n      toast({\n        title: 'Password Reset Failed',\n        description: error.message || 'Could not send password reset email. Please try again.',\n        variant: 'destructive',\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto flex min-h-[calc(100vh-8rem)] items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n      <Card className=\"w-full max-w-md shadow-xl\">\n        <CardHeader className=\"text-center\">\n          <div className=\"mx-auto mb-4 inline-flex h-16 w-16 items-center justify-center rounded-full bg-primary/10 text-primary\">\n            <LogIn className=\"h-8 w-8\" />\n          </div>\n          <CardTitle className=\"text-3xl font-bold\">Login to FindAChef</CardTitle>\n          <CardDescription className=\"text-lg\">\n            Access your dashboard and manage your culinary experiences.\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(handleLogin)} className=\"space-y-6\">\n              <FormField\n                control={form.control}\n                name=\"email\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Email Address</FormLabel>\n                    <FormControl>\n                      <Input type=\"email\" placeholder=\"you@example.com\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"password\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Password</FormLabel>\n                    <FormControl>\n                      <Input type=\"password\" placeholder=\"••••••••\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <Button type=\"submit\" className=\"w-full text-lg py-3\" size=\"lg\" disabled={isLoading || form.formState.isSubmitting}>\n                {isLoading ? <Loader2 className=\"mr-2 h-5 w-5 animate-spin\" /> : <><LogIn className=\"mr-2 h-5 w-5\" /> Login</>}\n              </Button>\n            </form>\n          </Form>\n          <div className=\"mt-6 space-y-3 text-center text-sm\">\n            <p>\n              <Button variant=\"link\" onClick={handlePasswordReset} className=\"p-0 h-auto font-medium text-primary hover:underline\" disabled={isLoading}>\n                Forgot Password?\n              </Button>\n            </p>\n            <p>\n              New to FindAChef?{' '}\n              <Link href=\"/chef/signup\" className=\"font-medium text-primary hover:underline\">\n                Sign up as a Chef\n              </Link>\n            </p>\n            <p>\n              New to FindAChef?{' '}\n              <Link href=\"/customer/signup\" className=\"font-medium text-primary hover:underline\">\n                Sign up as a Customer\n              </Link>\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}