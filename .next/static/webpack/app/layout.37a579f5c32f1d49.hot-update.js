"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/context/AuthContext.tsx":
/*!*************************************!*\
  !*** ./src/context/AuthContext.tsx ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/auth */ \"(app-pages-browser)/./node_modules/firebase/auth/dist/esm/index.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_firebase__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/firebase */ \"(app-pages-browser)/./src/lib/firebase.ts\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* __next_internal_client_entry_do_not_use__ AuthProvider,useAuth auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_2__.createContext)(undefined);\nfunction AuthProvider(param) {\n    let { children } = param;\n    _s();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [userProfile, setUserProfile] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [authLoading, setAuthLoading] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true);\n    const [profileLoading, setProfileLoading] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true);\n    const [isAdmin, setIsAdmin] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [isChef, setIsChef] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [isCustomer, setIsCustomer] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [isChefApproved, setIsChefApproved] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [isChefSubscribed, setIsChefSubscribed] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            console.log(\"AuthContext: Setting up onAuthStateChanged listener.\");\n            let profileUnsubscribe = undefined;\n            const unsubscribeAuth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.onAuthStateChanged)(_lib_firebase__WEBPACK_IMPORTED_MODULE_3__.auth, {\n                \"AuthProvider.useEffect.unsubscribeAuth\": async (currentUser)=>{\n                    console.log(\"AuthContext: onAuthStateChanged triggered. CurrentUser UID:\", (currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid) || \"null\");\n                    // Reset all profile-dependent states when currentUser changes or logs out\n                    if (profileUnsubscribe) {\n                        console.log(\"AuthContext: Cleaning up previous Firestore profile listener for old user or on logout.\");\n                        profileUnsubscribe();\n                        profileUnsubscribe = undefined;\n                    }\n                    setUserProfile(null);\n                    setIsAdmin(false);\n                    setIsChef(false);\n                    setIsCustomer(false);\n                    setIsChefApproved(false);\n                    setIsChefSubscribed(false);\n                    setUser(currentUser); // Set Firebase user immediately\n                    if (currentUser) {\n                        setProfileLoading(true); // Start loading profile and claims for the new user\n                        console.log(\"AuthContext: User found (UID:\", currentUser.uid, \"). Starting profile and claims loading.\");\n                        let claimsAdmin = false;\n                        try {\n                            console.log(\"AuthContext: Attempting to fetch ID token result with force refresh for UID:\", currentUser.uid);\n                            const idTokenResult = await currentUser.getIdTokenResult(true);\n                            console.log(\"AuthContext: ID Token Claims for user\", currentUser.uid, \":\", idTokenResult.claims);\n                            claimsAdmin = !!(idTokenResult.claims && idTokenResult.claims.isAdmin === true); // Check for 'isAdmin'\n                            setIsAdmin(claimsAdmin);\n                            if (!claimsAdmin) {\n                                console.warn(\"AuthContext: 'admin' custom claim not found or not true for user:\", currentUser.uid, \"Claims found:\", idTokenResult.claims);\n                            } else {\n                                console.log(\"AuthContext: 'admin' custom claim IS TRUE for user:\", currentUser.uid);\n                            }\n                        } catch (error) {\n                            console.error(\"AuthContext: Error fetching ID token result for custom claims for UID:\", currentUser.uid, error);\n                            setIsAdmin(false); // Ensure isAdmin is false on error\n                        }\n                        // Now fetch Firestore profile\n                        try {\n                            console.log(\"AuthContext: Setting up Firestore profile listener for UID:\", currentUser.uid);\n                            const userDocRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.doc)(_lib_firebase__WEBPACK_IMPORTED_MODULE_3__.db, \"users\", currentUser.uid);\n                            profileUnsubscribe = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.onSnapshot)(userDocRef, {\n                                \"AuthProvider.useEffect.unsubscribeAuth\": (docSnap)=>{\n                                    if (docSnap.exists()) {\n                                        const data = docSnap.data();\n                                        const profileData = {\n                                            id: docSnap.id,\n                                            ...data,\n                                            createdAt: data.createdAt instanceof firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.Timestamp ? data.createdAt.toDate() : data.createdAt ? new Date(data.createdAt) : undefined,\n                                            updatedAt: data.updatedAt instanceof firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.Timestamp ? data.updatedAt.toDate() : data.updatedAt ? new Date(data.updatedAt) : undefined\n                                        };\n                                        console.log(\"AuthContext: Firestore profile data loaded/updated for UID:\", currentUser.uid, \"Role:\", profileData.role);\n                                        setUserProfile(profileData);\n                                        const currentIsChef = profileData.role === 'chef';\n                                        const currentIsCustomer = profileData.role === 'customer';\n                                        const currentIsAdminFromFirestore = profileData.role === 'admin';\n                                        setIsChef(currentIsChef);\n                                        setIsCustomer(currentIsCustomer);\n                                        // Re-affirm isAdmin based on claims, but log if Firestore role mismatches\n                                        if (currentIsAdminFromFirestore && !claimsAdmin) {\n                                            console.warn(\"AuthContext: User has 'admin' role in Firestore, but 'admin' custom claim is missing or false. Custom claims determine actual admin access.\");\n                                        } else if (!currentIsAdminFromFirestore && claimsAdmin) {\n                                            console.log(\"AuthContext: User has 'admin' custom claim (isAdmin=true), granting admin access. Firestore role is:\", profileData.role);\n                                        }\n                                        if (currentIsChef) {\n                                            const chefProfileData = profileData;\n                                            setIsChefApproved(chefProfileData.isApproved || false);\n                                            setIsChefSubscribed(chefProfileData.isSubscribed || false);\n                                            console.log(\"AuthContext: Chef specific flags - Approved:\", chefProfileData.isApproved, \"Subscribed:\", chefProfileData.isSubscribed);\n                                        } else {\n                                            setIsChefApproved(false);\n                                            setIsChefSubscribed(false);\n                                        }\n                                    } else {\n                                        console.warn(\"AuthContext: No such user profile document in Firestore for UID:\", currentUser.uid);\n                                        setUserProfile(null); // Ensure profile is null if not found\n                                        // Reset dependent flags if profile doesn't exist\n                                        setIsChef(false);\n                                        setIsCustomer(false);\n                                        setIsChefApproved(false);\n                                        setIsChefSubscribed(false);\n                                    }\n                                    setProfileLoading(false); // Firestore profile processing complete\n                                }\n                            }[\"AuthProvider.useEffect.unsubscribeAuth\"], {\n                                \"AuthProvider.useEffect.unsubscribeAuth\": (error)=>{\n                                    console.error(\"AuthContext: Error with Firestore profile snapshot listener for UID:\", currentUser.uid, error);\n                                    setUserProfile(null);\n                                    setIsChef(false);\n                                    setIsCustomer(false);\n                                    setIsChefApproved(false);\n                                    setIsChefSubscribed(false);\n                                    setProfileLoading(false);\n                                }\n                            }[\"AuthProvider.useEffect.unsubscribeAuth\"]);\n                        } catch (e) {\n                            console.error(\"AuthContext: Outer error setting up Firestore profile snapshot for UID:\", currentUser.uid, e);\n                            setUserProfile(null);\n                            setIsChef(false);\n                            setIsCustomer(false);\n                            setIsChefApproved(false);\n                            setIsChefSubscribed(false);\n                            setProfileLoading(false); // Ensure profile loading is false even on outer error\n                        }\n                    } else {\n                        console.log(\"AuthContext: No current user (logged out). Resetting profile states.\");\n                        // No user, so no profile or claims to load\n                        setProfileLoading(false);\n                    }\n                    setAuthLoading(false); // Firebase auth state has resolved\n                }\n            }[\"AuthProvider.useEffect.unsubscribeAuth\"]);\n            return ({\n                \"AuthProvider.useEffect\": ()=>{\n                    console.log(\"AuthContext: Cleaning up onAuthStateChanged listener.\");\n                    unsubscribeAuth();\n                    if (profileUnsubscribe) {\n                        console.log(\"AuthContext: Cleaning up Firestore profile listener on AuthProvider unmount.\");\n                        profileUnsubscribe();\n                    }\n                }\n            })[\"AuthProvider.useEffect\"];\n        }\n    }[\"AuthProvider.useEffect\"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: {\n            user,\n            userProfile,\n            loading: authLoading || profileLoading,\n            authLoading,\n            profileLoading,\n            isAdmin,\n            isChef,\n            isCustomer,\n            isChefApproved,\n            isChefSubscribed\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/home/user/studio/src/context/AuthContext.tsx\",\n        lineNumber: 168,\n        columnNumber: 5\n    }, this);\n}\n_s(AuthProvider, \"tXX2UlTX4+0I8jpB0nNraJoPc/s=\");\n_c = AuthProvider;\nfunction useAuth() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n}\n_s1(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/context/AuthContext.tsx\n"));

/***/ })

});