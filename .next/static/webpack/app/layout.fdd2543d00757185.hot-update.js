"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"2fe3fd9ed622\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyIvaG9tZS91c2VyL3N0dWRpby9zcmMvYXBwL2dsb2JhbHMuY3NzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiMmZlM2ZkOWVkNjIyXCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/context/AuthContext.tsx":
/*!*************************************!*\
  !*** ./src/context/AuthContext.tsx ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/auth */ \"(app-pages-browser)/./node_modules/firebase/auth/dist/esm/index.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_firebase__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/firebase */ \"(app-pages-browser)/./src/lib/firebase.ts\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* __next_internal_client_entry_do_not_use__ AuthProvider,useAuth auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_2__.createContext)(undefined);\nfunction AuthProvider(param) {\n    let { children } = param;\n    _s();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [userProfile, setUserProfile] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [authLoading, setAuthLoading] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true); // For Firebase auth state\n    const [profileLoading, setProfileLoading] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true); // For Firestore profile & claims\n    const [isAdmin, setIsAdmin] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [isChef, setIsChef] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [isCustomer, setIsCustomer] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [isChefApproved, setIsChefApproved] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [isChefSubscribed, setIsChefSubscribed] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            console.log(\"AuthContext: Setting up onAuthStateChanged listener.\");\n            let profileUnsubscribe = undefined;\n            const unsubscribeAuth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.onAuthStateChanged)(_lib_firebase__WEBPACK_IMPORTED_MODULE_3__.auth, {\n                \"AuthProvider.useEffect.unsubscribeAuth\": async (currentUser)=>{\n                    console.log(\"AuthContext: onAuthStateChanged triggered. CurrentUser UID:\", (currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid) || null);\n                    // Reset all profile-dependent states when currentUser changes before fetching new data\n                    setUserProfile(null);\n                    setIsAdmin(false);\n                    setIsChef(false);\n                    setIsCustomer(false);\n                    setIsChefApproved(false);\n                    setIsChefSubscribed(false);\n                    if (profileUnsubscribe) {\n                        console.log(\"AuthContext: Cleaning up previous Firestore profile listener for old user or on logout.\");\n                        profileUnsubscribe();\n                        profileUnsubscribe = undefined;\n                    }\n                    setUser(currentUser);\n                    if (currentUser) {\n                        setProfileLoading(true); // Start loading profile and claims for the new user\n                        console.log(\"AuthContext: User found (UID:\", currentUser.uid, \"). Starting profile and claims loading.\");\n                        let claimsAdmin = false;\n                        try {\n                            console.log(\"AuthContext: Attempting to fetch ID token result with force refresh for UID:\", currentUser.uid);\n                            const idTokenResult = await currentUser.getIdTokenResult(true);\n                            console.log(\"AuthContext: ID Token Claims for user\", currentUser.uid, \":\", idTokenResult.claims);\n                            claimsAdmin = !!(idTokenResult.claims && idTokenResult.claims.admin === true);\n                            setIsAdmin(claimsAdmin);\n                            if (!claimsAdmin) {\n                                console.warn(\"AuthContext: 'admin' custom claim not found or not true for user:\", currentUser.uid, \"Claims found:\", idTokenResult.claims);\n                            } else {\n                                console.log(\"AuthContext: 'admin' custom claim IS TRUE for user:\", currentUser.uid);\n                            }\n                        } catch (error) {\n                            console.error(\"AuthContext: Error fetching ID token result for custom claims for UID:\", currentUser.uid, error);\n                            setIsAdmin(false); // Default to false on error\n                        }\n                        // Now set up Firestore listener for profile\n                        try {\n                            console.log(\"AuthContext: Setting up Firestore profile listener for UID:\", currentUser.uid);\n                            const userDocRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.doc)(_lib_firebase__WEBPACK_IMPORTED_MODULE_3__.db, \"users\", currentUser.uid);\n                            profileUnsubscribe = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.onSnapshot)(userDocRef, {\n                                \"AuthProvider.useEffect.unsubscribeAuth\": (docSnap)=>{\n                                    if (docSnap.exists()) {\n                                        const data = docSnap.data();\n                                        const profileData = {\n                                            id: docSnap.id,\n                                            ...data,\n                                            createdAt: data.createdAt instanceof firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.Timestamp ? data.createdAt.toDate() : data.createdAt ? new Date(data.createdAt) : undefined,\n                                            updatedAt: data.updatedAt instanceof firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.Timestamp ? data.updatedAt.toDate() : data.updatedAt ? new Date(data.updatedAt) : undefined\n                                        };\n                                        console.log(\"AuthContext: Firestore profile data loaded/updated for UID:\", currentUser.uid, \"Role:\", profileData.role);\n                                        setUserProfile(profileData);\n                                        const currentIsChef = profileData.role === 'chef';\n                                        const currentIsCustomer = profileData.role === 'customer';\n                                        // Admin status from claims is primary, this is just for logging consistency\n                                        const currentIsAdminRoleInFirestore = profileData.role === 'admin';\n                                        console.log(\"AuthContext: Setting isChef based on role:\", currentIsChef);\n                                        setIsChef(currentIsChef);\n                                        setIsCustomer(currentIsCustomer);\n                                        if (currentIsAdminRoleInFirestore && !claimsAdmin) {\n                                            console.warn(\"AuthContext: User has 'admin' role in Firestore, but 'admin' custom claim is missing or false. Custom claims determine admin access.\");\n                                        } else if (!currentIsAdminRoleInFirestore && claimsAdmin) {\n                                            console.log(\"AuthContext: User has 'admin' custom claim, granting admin access. Firestore role is:\", profileData.role);\n                                        }\n                                        if (currentIsChef) {\n                                            const chefProfileData = profileData;\n                                            setIsChefApproved(chefProfileData.isApproved || false);\n                                            setIsChefSubscribed(chefProfileData.isSubscribed || false);\n                                            console.log(\"AuthContext: Chef specific flags - Approved:\", chefProfileData.isApproved, \"Subscribed:\", chefProfileData.isSubscribed);\n                                        } else {\n                                            setIsChefApproved(false);\n                                            setIsChefSubscribed(false);\n                                        }\n                                    } else {\n                                        console.warn(\"AuthContext: No such user profile document in Firestore for UID:\", currentUser.uid);\n                                        setUserProfile(null); // Explicitly set to null if not found\n                                        // Reset flags if profile doesn't exist\n                                        setIsChef(false);\n                                        setIsCustomer(false);\n                                        setIsChefApproved(false);\n                                        setIsChefSubscribed(false);\n                                    }\n                                    setProfileLoading(false); // Profile and claims processing done for this user\n                                }\n                            }[\"AuthProvider.useEffect.unsubscribeAuth\"], {\n                                \"AuthProvider.useEffect.unsubscribeAuth\": (error)=>{\n                                    console.error(\"AuthContext: Error with Firestore profile snapshot listener for UID:\", currentUser.uid, error);\n                                    setUserProfile(null);\n                                    setIsChef(false);\n                                    setIsCustomer(false);\n                                    setIsChefApproved(false);\n                                    setIsChefSubscribed(false);\n                                    setProfileLoading(false);\n                                }\n                            }[\"AuthProvider.useEffect.unsubscribeAuth\"]);\n                        } catch (e) {\n                            console.error(\"AuthContext: Outer error setting up Firestore profile snapshot for UID:\", currentUser.uid, e);\n                            setUserProfile(null);\n                            setIsChef(false);\n                            setIsCustomer(false);\n                            setIsChefApproved(false);\n                            setIsChefSubscribed(false);\n                            setProfileLoading(false);\n                        }\n                    } else {\n                        console.log(\"AuthContext: No current user (logged out). Resetting profile states.\");\n                        setProfileLoading(false); // No profile or claims to load if no user\n                    }\n                    setAuthLoading(false); // Firebase auth state has resolved\n                }\n            }[\"AuthProvider.useEffect.unsubscribeAuth\"]);\n            return ({\n                \"AuthProvider.useEffect\": ()=>{\n                    console.log(\"AuthContext: Cleaning up onAuthStateChanged listener.\");\n                    unsubscribeAuth();\n                    if (profileUnsubscribe) {\n                        console.log(\"AuthContext: Cleaning up profile onSnapshot listener on AuthProvider unmount.\");\n                        profileUnsubscribe();\n                    }\n                }\n            })[\"AuthProvider.useEffect\"];\n        }\n    }[\"AuthProvider.useEffect\"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: {\n            user,\n            userProfile,\n            loading: authLoading || profileLoading,\n            authLoading,\n            profileLoading,\n            isAdmin,\n            isChef,\n            isCustomer,\n            isChefApproved,\n            isChefSubscribed\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/home/user/studio/src/context/AuthContext.tsx\",\n        lineNumber: 169,\n        columnNumber: 5\n    }, this);\n}\n_s(AuthProvider, \"tXX2UlTX4+0I8jpB0nNraJoPc/s=\");\n_c = AuthProvider;\nfunction useAuth() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n}\n_s1(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb250ZXh0L0F1dGhDb250ZXh0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBSW1EO0FBQ29DO0FBQzdDO0FBQ21DO0FBZ0I3RSxNQUFNVSw0QkFBY1Qsb0RBQWFBLENBQThCVTtBQUV4RCxTQUFTQyxhQUFhLEtBQXFDO1FBQXJDLEVBQUVDLFFBQVEsRUFBMkIsR0FBckM7O0lBQzNCLE1BQU0sQ0FBQ0MsTUFBTUMsUUFBUSxHQUFHWCwrQ0FBUUEsQ0FBYztJQUM5QyxNQUFNLENBQUNZLGFBQWFDLGVBQWUsR0FBR2IsK0NBQVFBLENBQStCO0lBQzdFLE1BQU0sQ0FBQ2MsYUFBYUMsZUFBZSxHQUFHZiwrQ0FBUUEsQ0FBQyxPQUFPLDBCQUEwQjtJQUNoRixNQUFNLENBQUNnQixnQkFBZ0JDLGtCQUFrQixHQUFHakIsK0NBQVFBLENBQUMsT0FBTyxpQ0FBaUM7SUFFN0YsTUFBTSxDQUFDa0IsU0FBU0MsV0FBVyxHQUFHbkIsK0NBQVFBLENBQUM7SUFDdkMsTUFBTSxDQUFDb0IsUUFBUUMsVUFBVSxHQUFHckIsK0NBQVFBLENBQUM7SUFDckMsTUFBTSxDQUFDc0IsWUFBWUMsY0FBYyxHQUFHdkIsK0NBQVFBLENBQUM7SUFDN0MsTUFBTSxDQUFDd0IsZ0JBQWdCQyxrQkFBa0IsR0FBR3pCLCtDQUFRQSxDQUFDO0lBQ3JELE1BQU0sQ0FBQzBCLGtCQUFrQkMsb0JBQW9CLEdBQUczQiwrQ0FBUUEsQ0FBQztJQUV6REQsZ0RBQVNBO2tDQUFDO1lBQ1I2QixRQUFRQyxHQUFHLENBQUM7WUFDWixJQUFJQyxxQkFBOEN2QjtZQUVsRCxNQUFNd0Isa0JBQWtCbkMsaUVBQWtCQSxDQUFDSywrQ0FBSUE7MERBQUUsT0FBTytCO29CQUN0REosUUFBUUMsR0FBRyxDQUFDLCtEQUErREcsQ0FBQUEsd0JBQUFBLGtDQUFBQSxZQUFhQyxHQUFHLEtBQUk7b0JBRS9GLHVGQUF1RjtvQkFDdkZwQixlQUFlO29CQUNmTSxXQUFXO29C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O1lBQzNCbEQ7WUFDQUU7WUFDQWlELFNBQVMvQyxlQUFlRTtZQUN4QkY7WUFDQUU7WUFDQUU7WUFDQUU7WUFDQUU7WUFDQUU7WUFDQUU7UUFDRjtrQkFDR2pCOzs7Ozs7QUFHUDtHQTlKZ0JEO0tBQUFBO0FBZ0tULFNBQVNzRDs7SUFDZCxNQUFNQyxVQUFVakUsaURBQVVBLENBQUNRO0lBQzNCLElBQUl5RCxZQUFZeEQsV0FBVztRQUN6QixNQUFNLElBQUl5RCxNQUFNO0lBQ2xCO0lBQ0EsT0FBT0Q7QUFDVDtJQU5nQkQiLCJzb3VyY2VzIjpbIi9ob21lL3VzZXIvc3R1ZGlvL3NyYy9jb250ZXh0L0F1dGhDb250ZXh0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJcbid1c2UgY2xpZW50JztcblxuaW1wb3J0IHR5cGUgeyBVc2VyIH0gZnJvbSAnZmlyZWJhc2UvYXV0aCc7XG5pbXBvcnQgeyBvbkF1dGhTdGF0ZUNoYW5nZWQgfSBmcm9tICdmaXJlYmFzZS9hdXRoJztcbmltcG9ydCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZUVmZmVjdCwgdXNlU3RhdGUsIHR5cGUgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgYXV0aCwgZGIgfSBmcm9tICdAL2xpYi9maXJlYmFzZSc7XG5pbXBvcnQgeyBkb2MsIG9uU25hcHNob3QsIFVuc3Vic2NyaWJlLCBUaW1lc3RhbXAgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnOyBcbmltcG9ydCB0eXBlIHsgQXBwVXNlclByb2ZpbGVDb250ZXh0LCBDaGVmUHJvZmlsZSwgQ3VzdG9tZXJQcm9maWxlIH0gZnJvbSAnQC90eXBlcyc7XG5cbmludGVyZmFjZSBBdXRoQ29udGV4dFR5cGUge1xuICB1c2VyOiBVc2VyIHwgbnVsbDtcbiAgdXNlclByb2ZpbGU6IEFwcFVzZXJQcm9maWxlQ29udGV4dCB8IG51bGw7XG4gIGxvYWRpbmc6IGJvb2xlYW47IC8vIFRydWUgd2hpbGUgRmlyZWJhc2UgYXV0aCBzdGF0ZSBpcyByZXNvbHZpbmcgaW5pdGlhbGx5IEFORCBwcm9maWxlL2NsYWltcyBhcmUgbG9hZGluZ1xuICBhdXRoTG9hZGluZzogYm9vbGVhbjsgLy8gU3BlY2lmaWNhbGx5IGZvciBGaXJlYmFzZSBhdXRoIHN0YXRlIHJlc29sdXRpb25cbiAgcHJvZmlsZUxvYWRpbmc6IGJvb2xlYW47IC8vIFNwZWNpZmljYWxseSBmb3IgRmlyZXN0b3JlIHByb2ZpbGUgYW5kIGN1c3RvbSBjbGFpbXMgbG9hZGluZ1xuICBpc0FkbWluOiBib29sZWFuO1xuICBpc0NoZWY6IGJvb2xlYW47XG4gIGlzQ3VzdG9tZXI6IGJvb2xlYW47XG4gIGlzQ2hlZkFwcHJvdmVkOiBib29sZWFuO1xuICBpc0NoZWZTdWJzY3JpYmVkOiBib29sZWFuO1xufVxuXG5jb25zdCBBdXRoQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8QXV0aENvbnRleHRUeXBlIHwgdW5kZWZpbmVkPih1bmRlZmluZWQpO1xuXG5leHBvcnQgZnVuY3Rpb24gQXV0aFByb3ZpZGVyKHsgY2hpbGRyZW4gfTogeyBjaGlsZHJlbjogUmVhY3ROb2RlIH0pIHtcbiAgY29uc3QgW3VzZXIsIHNldFVzZXJdID0gdXNlU3RhdGU8VXNlciB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbdXNlclByb2ZpbGUsIHNldFVzZXJQcm9maWxlXSA9IHVzZVN0YXRlPEFwcFVzZXJQcm9maWxlQ29udGV4dCB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbYXV0aExvYWRpbmcsIHNldEF1dGhMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpOyAvLyBGb3IgRmlyZWJhc2UgYXV0aCBzdGF0ZVxuICBjb25zdCBbcHJvZmlsZUxvYWRpbmcsIHNldFByb2ZpbGVMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpOyAvLyBGb3IgRmlyZXN0b3JlIHByb2ZpbGUgJiBjbGFpbXNcbiAgXG4gIGNvbnN0IFtpc0FkbWluLCBzZXRJc0FkbWluXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2lzQ2hlZiwgc2V0SXNDaGVmXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2lzQ3VzdG9tZXIsIHNldElzQ3VzdG9tZXJdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbaXNDaGVmQXBwcm92ZWQsIHNldElzQ2hlZkFwcHJvdmVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2lzQ2hlZlN1YnNjcmliZWQsIHNldElzQ2hlZlN1YnNjcmliZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc29sZS5sb2coXCJBdXRoQ29udGV4dDogU2V0dGluZyB1cCBvbkF1dGhTdGF0ZUNoYW5nZWQgbGlzdGVuZXIuXCIpO1xuICAgIGxldCBwcm9maWxlVW5zdWJzY3JpYmU6IFVuc3Vic2NyaWJlIHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkO1xuXG4gICAgY29uc3QgdW5zdWJzY3JpYmVBdXRoID0gb25BdXRoU3RhdGVDaGFuZ2VkKGF1dGgsIGFzeW5jIChjdXJyZW50VXNlcikgPT4ge1xuICAgICAgY29uc29sZS5sb2coXCJBdXRoQ29udGV4dDogb25BdXRoU3RhdGVDaGFuZ2VkIHRyaWdnZXJlZC4gQ3VycmVudFVzZXIgVUlEOlwiLCBjdXJyZW50VXNlcj8udWlkIHx8IG51bGwpO1xuICAgICAgXG4gICAgICAvLyBSZXNldCBhbGwgcHJvZmlsZS1kZXBlbmRlbnQgc3RhdGVzIHdoZW4gY3VycmVudFVzZXIgY2hhbmdlcyBiZWZvcmUgZmV0Y2hpbmcgbmV3IGRhdGFcbiAgICAgIHNldFVzZXJQcm9maWxlKG51bGwpO1xuICAgICAgc2V0SXNBZG1pbihmYWxzZSk7XG4gICAgICBzZXRJc0NoZWYoZmFsc2UpO1xuICAgICAgc2V0SXNDdXN0b21lcihmYWxzZSk7XG4gICAgICBzZXRJc0NoZWZBcHByb3ZlZChmYWxzZSk7XG4gICAgICBzZXRJc0NoZWZTdWJzY3JpYmVkKGZhbHNlKTtcbiAgICAgIFxuICAgICAgaWYgKHByb2ZpbGVVbnN1YnNjcmliZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhcIkF1dGhDb250ZXh0OiBDbGVhbmluZyB1cCBwcmV2aW91cyBGaXJlc3RvcmUgcHJvZmlsZSBsaXN0ZW5lciBmb3Igb2xkIHVzZXIgb3Igb24gbG9nb3V0LlwiKTtcbiAgICAgICAgcHJvZmlsZVVuc3Vic2NyaWJlKCk7XG4gICAgICAgIHByb2ZpbGVVbnN1YnNjcmliZSA9IHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgICAgc2V0VXNlcihjdXJyZW50VXNlcik7IFxuXG4gICAgICBpZiAoY3VycmVudFVzZXIpIHtcbiAgICAgICAgc2V0UHJvZmlsZUxvYWRpbmcodHJ1ZSk7IC8vIFN0YXJ0IGxvYWRpbmcgcHJvZmlsZSBhbmQgY2xhaW1zIGZvciB0aGUgbmV3IHVzZXJcbiAgICAgICAgY29uc29sZS5sb2coXCJBdXRoQ29udGV4dDogVXNlciBmb3VuZCAoVUlEOlwiLCBjdXJyZW50VXNlci51aWQsIFwiKS4gU3RhcnRpbmcgcHJvZmlsZSBhbmQgY2xhaW1zIGxvYWRpbmcuXCIpO1xuXG4gICAgICAgIGxldCBjbGFpbXNBZG1pbiA9IGZhbHNlO1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwiQXV0aENvbnRleHQ6IEF0dGVtcHRpbmcgdG8gZmV0Y2ggSUQgdG9rZW4gcmVzdWx0IHdpdGggZm9yY2UgcmVmcmVzaCBmb3IgVUlEOlwiLCBjdXJyZW50VXNlci51aWQpO1xuICAgICAgICAgIGNvbnN0IGlkVG9rZW5SZXN1bHQgPSBhd2FpdCBjdXJyZW50VXNlci5nZXRJZFRva2VuUmVzdWx0KHRydWUpOyBcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIkF1dGhDb250ZXh0OiBJRCBUb2tlbiBDbGFpbXMgZm9yIHVzZXJcIiwgY3VycmVudFVzZXIudWlkLCBcIjpcIiwgaWRUb2tlblJlc3VsdC5jbGFpbXMpO1xuICAgICAgICAgIGNsYWltc0FkbWluID0gISEoaWRUb2tlblJlc3VsdC5jbGFpbXMgJiYgaWRUb2tlblJlc3VsdC5jbGFpbXMuYWRtaW4gPT09IHRydWUpO1xuICAgICAgICAgIHNldElzQWRtaW4oY2xhaW1zQWRtaW4pO1xuICAgICAgICAgIGlmICghY2xhaW1zQWRtaW4pIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihcIkF1dGhDb250ZXh0OiAnYWRtaW4nIGN1c3RvbSBjbGFpbSBub3QgZm91bmQgb3Igbm90IHRydWUgZm9yIHVzZXI6XCIsIGN1cnJlbnRVc2VyLnVpZCwgXCJDbGFpbXMgZm91bmQ6XCIsIGlkVG9rZW5SZXN1bHQuY2xhaW1zKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJBdXRoQ29udGV4dDogJ2FkbWluJyBjdXN0b20gY2xhaW0gSVMgVFJVRSBmb3IgdXNlcjpcIiwgY3VycmVudFVzZXIudWlkKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihcIkF1dGhDb250ZXh0OiBFcnJvciBmZXRjaGluZyBJRCB0b2tlbiByZXN1bHQgZm9yIGN1c3RvbSBjbGFpbXMgZm9yIFVJRDpcIiwgY3VycmVudFVzZXIudWlkLCBlcnJvcik7XG4gICAgICAgICAgc2V0SXNBZG1pbihmYWxzZSk7IC8vIERlZmF1bHQgdG8gZmFsc2Ugb24gZXJyb3JcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIE5vdyBzZXQgdXAgRmlyZXN0b3JlIGxpc3RlbmVyIGZvciBwcm9maWxlXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgY29uc29sZS5sb2coXCJBdXRoQ29udGV4dDogU2V0dGluZyB1cCBGaXJlc3RvcmUgcHJvZmlsZSBsaXN0ZW5lciBmb3IgVUlEOlwiLCBjdXJyZW50VXNlci51aWQpO1xuICAgICAgICAgIGNvbnN0IHVzZXJEb2NSZWYgPSBkb2MoZGIsIFwidXNlcnNcIiwgY3VycmVudFVzZXIudWlkKTtcbiAgICAgICAgICBwcm9maWxlVW5zdWJzY3JpYmUgPSBvblNuYXBzaG90KHVzZXJEb2NSZWYsIChkb2NTbmFwKSA9PiB7XG4gICAgICAgICAgICBpZiAoZG9jU25hcC5leGlzdHMoKSkge1xuICAgICAgICAgICAgICBjb25zdCBkYXRhID0gZG9jU25hcC5kYXRhKCk7XG4gICAgICAgICAgICAgIGNvbnN0IHByb2ZpbGVEYXRhID0geyBcbiAgICAgICAgICAgICAgICBpZDogZG9jU25hcC5pZCwgXG4gICAgICAgICAgICAgICAgLi4uZGF0YSxcbiAgICAgICAgICAgICAgICBjcmVhdGVkQXQ6IGRhdGEuY3JlYXRlZEF0IGluc3RhbmNlb2YgVGltZXN0YW1wID8gZGF0YS5jcmVhdGVkQXQudG9EYXRlKCkgOiAoZGF0YS5jcmVhdGVkQXQgPyBuZXcgRGF0ZShkYXRhLmNyZWF0ZWRBdCBhcyBhbnkpIDogdW5kZWZpbmVkKSxcbiAgICAgICAgICAgICAgICB1cGRhdGVkQXQ6IGRhdGEudXBkYXRlZEF0IGluc3RhbmNlb2YgVGltZXN0YW1wID8gZGF0YS51cGRhdGVkQXQudG9EYXRlKCkgOiAoZGF0YS51cGRhdGVkQXQgPyBuZXcgRGF0ZShkYXRhLnVwZGF0ZWRBdCBhcyBhbnkpIDogdW5kZWZpbmVkKSxcbiAgICAgICAgICAgICAgfSBhcyBBcHBVc2VyUHJvZmlsZUNvbnRleHQ7XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkF1dGhDb250ZXh0OiBGaXJlc3RvcmUgcHJvZmlsZSBkYXRhIGxvYWRlZC91cGRhdGVkIGZvciBVSUQ6XCIsIGN1cnJlbnRVc2VyLnVpZCwgXCJSb2xlOlwiLCBwcm9maWxlRGF0YS5yb2xlKTtcbiAgICAgICAgICAgICAgc2V0VXNlclByb2ZpbGUocHJvZmlsZURhdGEpO1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgY29uc3QgY3VycmVudElzQ2hlZiA9IHByb2ZpbGVEYXRhLnJvbGUgPT09ICdjaGVmJztcbiAgICAgICAgICAgICAgY29uc3QgY3VycmVudElzQ3VzdG9tZXIgPSBwcm9maWxlRGF0YS5yb2xlID09PSAnY3VzdG9tZXInO1xuICAgICAgICAgICAgICAvLyBBZG1pbiBzdGF0dXMgZnJvbSBjbGFpbXMgaXMgcHJpbWFyeSwgdGhpcyBpcyBqdXN0IGZvciBsb2dnaW5nIGNvbnNpc3RlbmN5XG4gICAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRJc0FkbWluUm9sZUluRmlyZXN0b3JlID0gcHJvZmlsZURhdGEucm9sZSA9PT0gJ2FkbWluJztcblxuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkF1dGhDb250ZXh0OiBTZXR0aW5nIGlzQ2hlZiBiYXNlZCBvbiByb2xlOlwiLCBjdXJyZW50SXNDaGVmKTtcbiAgICAgICAgICAgICAgc2V0SXNDaGVmKGN1cnJlbnRJc0NoZWYpO1xuICAgICAgICAgICAgICBzZXRJc0N1c3RvbWVyKGN1cnJlbnRJc0N1c3RvbWVyKTtcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIGlmIChjdXJyZW50SXNBZG1pblJvbGVJbkZpcmVzdG9yZSAmJiAhY2xhaW1zQWRtaW4pIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oXCJBdXRoQ29udGV4dDogVXNlciBoYXMgJ2FkbWluJyByb2xlIGluIEZpcmVzdG9yZSwgYnV0ICdhZG1pbicgY3VzdG9tIGNsYWltIGlzIG1pc3Npbmcgb3IgZmFsc2UuIEN1c3RvbSBjbGFpbXMgZGV0ZXJtaW5lIGFkbWluIGFjY2Vzcy5cIik7XG4gICAgICAgICAgICAgIH0gZWxzZSBpZiAoIWN1cnJlbnRJc0FkbWluUm9sZUluRmlyZXN0b3JlICYmIGNsYWltc0FkbWluKSB7XG4gICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQXV0aENvbnRleHQ6IFVzZXIgaGFzICdhZG1pbicgY3VzdG9tIGNsYWltLCBncmFudGluZyBhZG1pbiBhY2Nlc3MuIEZpcmVzdG9yZSByb2xlIGlzOlwiLCBwcm9maWxlRGF0YS5yb2xlKTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmIChjdXJyZW50SXNDaGVmKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2hlZlByb2ZpbGVEYXRhID0gcHJvZmlsZURhdGEgYXMgQ2hlZlByb2ZpbGU7XG4gICAgICAgICAgICAgICAgc2V0SXNDaGVmQXBwcm92ZWQoY2hlZlByb2ZpbGVEYXRhLmlzQXBwcm92ZWQgfHwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIHNldElzQ2hlZlN1YnNjcmliZWQoY2hlZlByb2ZpbGVEYXRhLmlzU3Vic2NyaWJlZCB8fCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJBdXRoQ29udGV4dDogQ2hlZiBzcGVjaWZpYyBmbGFncyAtIEFwcHJvdmVkOlwiLCBjaGVmUHJvZmlsZURhdGEuaXNBcHByb3ZlZCwgXCJTdWJzY3JpYmVkOlwiLCBjaGVmUHJvZmlsZURhdGEuaXNTdWJzY3JpYmVkKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzZXRJc0NoZWZBcHByb3ZlZChmYWxzZSk7XG4gICAgICAgICAgICAgICAgc2V0SXNDaGVmU3Vic2NyaWJlZChmYWxzZSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGNvbnNvbGUud2FybihcIkF1dGhDb250ZXh0OiBObyBzdWNoIHVzZXIgcHJvZmlsZSBkb2N1bWVudCBpbiBGaXJlc3RvcmUgZm9yIFVJRDpcIiwgY3VycmVudFVzZXIudWlkKTtcbiAgICAgICAgICAgICAgc2V0VXNlclByb2ZpbGUobnVsbCk7IC8vIEV4cGxpY2l0bHkgc2V0IHRvIG51bGwgaWYgbm90IGZvdW5kXG4gICAgICAgICAgICAgIC8vIFJlc2V0IGZsYWdzIGlmIHByb2ZpbGUgZG9lc24ndCBleGlzdFxuICAgICAgICAgICAgICBzZXRJc0NoZWYoZmFsc2UpO1xuICAgICAgICAgICAgICBzZXRJc0N1c3RvbWVyKGZhbHNlKTtcbiAgICAgICAgICAgICAgc2V0SXNDaGVmQXBwcm92ZWQoZmFsc2UpO1xuICAgICAgICAgICAgICBzZXRJc0NoZWZTdWJzY3JpYmVkKGZhbHNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNldFByb2ZpbGVMb2FkaW5nKGZhbHNlKTsgLy8gUHJvZmlsZSBhbmQgY2xhaW1zIHByb2Nlc3NpbmcgZG9uZSBmb3IgdGhpcyB1c2VyXG4gICAgICAgICAgfSwgKGVycm9yKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiQXV0aENvbnRleHQ6IEVycm9yIHdpdGggRmlyZXN0b3JlIHByb2ZpbGUgc25hcHNob3QgbGlzdGVuZXIgZm9yIFVJRDpcIiwgY3VycmVudFVzZXIudWlkLCBlcnJvcik7XG4gICAgICAgICAgICBzZXRVc2VyUHJvZmlsZShudWxsKTtcbiAgICAgICAgICAgIHNldElzQ2hlZihmYWxzZSk7XG4gICAgICAgICAgICBzZXRJc0N1c3RvbWVyKGZhbHNlKTtcbiAgICAgICAgICAgIHNldElzQ2hlZkFwcHJvdmVkKGZhbHNlKTtcbiAgICAgICAgICAgIHNldElzQ2hlZlN1YnNjcmliZWQoZmFsc2UpO1xuICAgICAgICAgICAgc2V0UHJvZmlsZUxvYWRpbmcoZmFsc2UpOyBcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJBdXRoQ29udGV4dDogT3V0ZXIgZXJyb3Igc2V0dGluZyB1cCBGaXJlc3RvcmUgcHJvZmlsZSBzbmFwc2hvdCBmb3IgVUlEOlwiLCBjdXJyZW50VXNlci51aWQsIGUpO1xuICAgICAgICAgIHNldFVzZXJQcm9maWxlKG51bGwpO1xuICAgICAgICAgIHNldElzQ2hlZihmYWxzZSk7XG4gICAgICAgICAgc2V0SXNDdXN0b21lcihmYWxzZSk7XG4gICAgICAgICAgc2V0SXNDaGVmQXBwcm92ZWQoZmFsc2UpO1xuICAgICAgICAgIHNldElzQ2hlZlN1YnNjcmliZWQoZmFsc2UpO1xuICAgICAgICAgIHNldFByb2ZpbGVMb2FkaW5nKGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHsgXG4gICAgICAgIGNvbnNvbGUubG9nKFwiQXV0aENvbnRleHQ6IE5vIGN1cnJlbnQgdXNlciAobG9nZ2VkIG91dCkuIFJlc2V0dGluZyBwcm9maWxlIHN0YXRlcy5cIik7XG4gICAgICAgIHNldFByb2ZpbGVMb2FkaW5nKGZhbHNlKTsgLy8gTm8gcHJvZmlsZSBvciBjbGFpbXMgdG8gbG9hZCBpZiBubyB1c2VyXG4gICAgICB9XG4gICAgICBzZXRBdXRoTG9hZGluZyhmYWxzZSk7IC8vIEZpcmViYXNlIGF1dGggc3RhdGUgaGFzIHJlc29sdmVkXG4gICAgfSk7XG5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coXCJBdXRoQ29udGV4dDogQ2xlYW5pbmcgdXAgb25BdXRoU3RhdGVDaGFuZ2VkIGxpc3RlbmVyLlwiKTtcbiAgICAgIHVuc3Vic2NyaWJlQXV0aCgpO1xuICAgICAgaWYgKHByb2ZpbGVVbnN1YnNjcmliZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhcIkF1dGhDb250ZXh0OiBDbGVhbmluZyB1cCBwcm9maWxlIG9uU25hcHNob3QgbGlzdGVuZXIgb24gQXV0aFByb3ZpZGVyIHVubW91bnQuXCIpO1xuICAgICAgICBwcm9maWxlVW5zdWJzY3JpYmUoKTtcbiAgICAgIH1cbiAgICB9O1xuICB9LCBbXSk7IFxuXG4gIHJldHVybiAoXG4gICAgPEF1dGhDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt7IFxuICAgICAgdXNlciwgXG4gICAgICB1c2VyUHJvZmlsZSwgXG4gICAgICBsb2FkaW5nOiBhdXRoTG9hZGluZyB8fCBwcm9maWxlTG9hZGluZywgLy8gQ29tYmluZWQgbG9hZGluZyBzdGF0ZSBmb3IgY29uc3VtZXJzXG4gICAgICBhdXRoTG9hZGluZywgLy8gRXhwb3NlZCBmb3Igc3BlY2lmaWMgbmVlZHMgaWYgYW55XG4gICAgICBwcm9maWxlTG9hZGluZywgLy8gRXhwb3NlZCBmb3Igc3BlY2lmaWMgbmVlZHMgaWYgYW55XG4gICAgICBpc0FkbWluLCBcbiAgICAgIGlzQ2hlZiwgXG4gICAgICBpc0N1c3RvbWVyLCBcbiAgICAgIGlzQ2hlZkFwcHJvdmVkLCBcbiAgICAgIGlzQ2hlZlN1YnNjcmliZWQgXG4gICAgfX0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9BdXRoQ29udGV4dC5Qcm92aWRlcj5cbiAgKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVzZUF1dGgoKSB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VDb250ZXh0KEF1dGhDb250ZXh0KTtcbiAgaWYgKGNvbnRleHQgPT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBFcnJvcigndXNlQXV0aCBtdXN0IGJlIHVzZWQgd2l0aGluIGFuIEF1dGhQcm92aWRlcicpO1xuICB9XG4gIHJldHVybiBjb250ZXh0O1xufVxuIl0sIm5hbWVzIjpbIm9uQXV0aFN0YXRlQ2hhbmdlZCIsImNyZWF0ZUNvbnRleHQiLCJ1c2VDb250ZXh0IiwidXNlRWZmZWN0IiwidXNlU3RhdGUiLCJhdXRoIiwiZGIiLCJkb2MiLCJvblNuYXBzaG90IiwiVGltZXN0YW1wIiwiQXV0aENvbnRleHQiLCJ1bmRlZmluZWQiLCJBdXRoUHJvdmlkZXIiLCJjaGlsZHJlbiIsInVzZXIiLCJzZXRVc2VyIiwidXNlclByb2ZpbGUiLCJzZXRVc2VyUHJvZmlsZSIsImF1dGhMb2FkaW5nIiwic2V0QXV0aExvYWRpbmciLCJwcm9maWxlTG9hZGluZyIsInNldFByb2ZpbGVMb2FkaW5nIiwiaXNBZG1pbiIsInNldElzQWRtaW4iLCJpc0NoZWYiLCJzZXRJc0NoZWYiLCJpc0N1c3RvbWVyIiwic2V0SXNDdXN0b21lciIsImlzQ2hlZkFwcHJvdmVkIiwic2V0SXNDaGVmQXBwcm92ZWQiLCJpc0NoZWZTdWJzY3JpYmVkIiwic2V0SXNDaGVmU3Vic2NyaWJlZCIsImNvbnNvbGUiLCJsb2ciLCJwcm9maWxlVW5zdWJzY3JpYmUiLCJ1bnN1YnNjcmliZUF1dGgiLCJjdXJyZW50VXNlciIsInVpZCIsImNsYWltc0FkbWluIiwiaWRUb2tlblJlc3VsdCIsImdldElkVG9rZW5SZXN1bHQiLCJjbGFpbXMiLCJhZG1pbiIsIndhcm4iLCJlcnJvciIsInVzZXJEb2NSZWYiLCJkb2NTbmFwIiwiZXhpc3RzIiwiZGF0YSIsInByb2ZpbGVEYXRhIiwiaWQiLCJjcmVhdGVkQXQiLCJ0b0RhdGUiLCJEYXRlIiwidXBkYXRlZEF0Iiwicm9sZSIsImN1cnJlbnRJc0NoZWYiLCJjdXJyZW50SXNDdXN0b21lciIsImN1cnJlbnRJc0FkbWluUm9sZUluRmlyZXN0b3JlIiwiY2hlZlByb2ZpbGVEYXRhIiwiaXNBcHByb3ZlZCIsImlzU3Vic2NyaWJlZCIsImUiLCJQcm92aWRlciIsInZhbHVlIiwibG9hZGluZyIsInVzZUF1dGgiLCJjb250ZXh0IiwiRXJyb3IiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/context/AuthContext.tsx\n"));

/***/ })

});